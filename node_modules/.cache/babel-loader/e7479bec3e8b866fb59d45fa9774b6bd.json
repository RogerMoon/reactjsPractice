{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inheritsLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _uncontrollable = _interopRequireDefault(require(\"uncontrollable\"));\n\nvar TAB = 'tab';\nvar PANE = 'pane';\n\nvar idPropType = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]);\n\nvar propTypes = {\n  /**\n   * HTML id attribute, required if no `generateChildId` prop\n   * is specified.\n   */\n  id: function id(props) {\n    var error = null;\n\n    if (!props.generateChildId) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      error = idPropType.apply(void 0, [props].concat(args));\n\n      if (!error && !props.id) {\n        error = new Error('In order to properly initialize Tabs in a way that is accessible ' + 'to assistive technologies (such as screen readers) an `id` or a ' + '`generateChildId` prop to TabContainer is required');\n      }\n    }\n\n    return error;\n  },\n\n  /**\n   * A function that takes an `eventKey` and `type` and returns a unique id for\n   * child tab `<NavItem>`s and `<TabPane>`s. The function _must_ be a pure\n   * function, meaning it should always return the _same_ id for the same set\n   * of inputs. The default value requires that an `id` to be set for the\n   * `<TabContainer>`.\n   *\n   * The `type` argument will either be `\"tab\"` or `\"pane\"`.\n   *\n   * @defaultValue (eventKey, type) => `${this.props.id}-${type}-${key}`\n   */\n  generateChildId: _propTypes.default.func,\n\n  /**\n   * A callback fired when a tab is selected.\n   *\n   * @controllable activeKey\n   */\n  onSelect: _propTypes.default.func,\n\n  /**\n   * The `eventKey` of the currently active tab.\n   *\n   * @controllable onSelect\n   */\n  activeKey: _propTypes.default.any\n};\nvar childContextTypes = {\n  $bs_tabContainer: _propTypes.default.shape({\n    activeKey: _propTypes.default.any,\n    onSelect: _propTypes.default.func.isRequired,\n    getTabId: _propTypes.default.func.isRequired,\n    getPaneId: _propTypes.default.func.isRequired\n  })\n};\n\nvar TabContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(TabContainer, _React$Component);\n\n  function TabContainer() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TabContainer.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n        activeKey = _this$props.activeKey,\n        onSelect = _this$props.onSelect,\n        generateChildId = _this$props.generateChildId,\n        id = _this$props.id;\n\n    var getId = generateChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n\n    return {\n      $bs_tabContainer: {\n        activeKey: activeKey,\n        onSelect: onSelect,\n        getTabId: function getTabId(key) {\n          return getId(key, TAB);\n        },\n        getPaneId: function getPaneId(key) {\n          return getId(key, PANE);\n        }\n      }\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props2, [\"children\"]);\n    delete props.generateChildId;\n    delete props.onSelect;\n    delete props.activeKey;\n    return _react.default.cloneElement(_react.default.Children.only(children), props);\n  };\n\n  return TabContainer;\n}(_react.default.Component);\n\nTabContainer.propTypes = propTypes;\nTabContainer.childContextTypes = childContextTypes;\n\nvar _default = (0, _uncontrollable.default)(TabContainer, {\n  activeKey: 'onSelect'\n});\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}