{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inheritsLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Button = _interopRequireDefault(require(\"./Button\"));\n\nvar _Dropdown = _interopRequireDefault(require(\"./Dropdown\"));\n\nvar _SplitToggle = _interopRequireDefault(require(\"./SplitToggle\"));\n\nvar _splitComponentProps2 = _interopRequireDefault(require(\"./utils/splitComponentProps\"));\n\nvar propTypes = (0, _extends2.default)({}, _Dropdown.default.propTypes, {\n  // Toggle props.\n  bsStyle: _propTypes.default.string,\n  bsSize: _propTypes.default.string,\n  href: _propTypes.default.string,\n  onClick: _propTypes.default.func,\n\n  /**\n   * The content of the split button.\n   */\n  title: _propTypes.default.node.isRequired,\n\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: _propTypes.default.string,\n  // Override generated docs from <Dropdown>.\n\n  /**\n   * @private\n   */\n  children: _propTypes.default.node\n});\n\nvar SplitButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(SplitButton, _React$Component);\n\n  function SplitButton() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = SplitButton.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsSize = _this$props.bsSize,\n        bsStyle = _this$props.bsStyle,\n        title = _this$props.title,\n        toggleLabel = _this$props.toggleLabel,\n        children = _this$props.children,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"bsSize\", \"bsStyle\", \"title\", \"toggleLabel\", \"children\"]);\n\n    var _splitComponentProps = (0, _splitComponentProps2.default)(props, _Dropdown.default.ControlledComponent),\n        dropdownProps = _splitComponentProps[0],\n        buttonProps = _splitComponentProps[1];\n\n    return _react.default.createElement(_Dropdown.default, (0, _extends2.default)({}, dropdownProps, {\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), _react.default.createElement(_Button.default, (0, _extends2.default)({}, buttonProps, {\n      disabled: props.disabled,\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), title), _react.default.createElement(_SplitToggle.default, {\n      \"aria-label\": toggleLabel || title,\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), _react.default.createElement(_Dropdown.default.Menu, null, children));\n  };\n\n  return SplitButton;\n}(_react.default.Component);\n\nSplitButton.propTypes = propTypes;\nSplitButton.Toggle = _SplitToggle.default;\nvar _default = SplitButton;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}