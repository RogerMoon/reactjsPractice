{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inheritsLoose\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _elementType = _interopRequireDefault(require(\"react-prop-types/lib/elementType\"));\n\nvar _bootstrapUtils = require(\"./utils/bootstrapUtils\");\n\nvar _PanelToggle = _interopRequireDefault(require(\"./PanelToggle\"));\n\nvar propTypes = {\n  componentClass: _elementType.default,\n\n  /**\n   * A convenience prop that renders the Panel.Title as a panel collapse toggle component\n   * for the common use-case.\n   */\n  toggle: _propTypes.default.bool\n};\nvar contextTypes = {\n  $bs_panel: _propTypes.default.shape({\n    bsClass: _propTypes.default.string\n  })\n};\nvar defaultProps = {\n  componentClass: 'div'\n};\n\nvar PanelTitle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(PanelTitle, _React$Component);\n\n  function PanelTitle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PanelTitle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        toggle = _this$props.toggle,\n        Component = _this$props.componentClass,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"children\", \"className\", \"toggle\", \"componentClass\"]);\n\n    var _ref = this.context.$bs_panel || {},\n        _bsClass = _ref.bsClass;\n\n    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    bsProps.bsClass = _bsClass || bsProps.bsClass;\n\n    if (toggle) {\n      children = _react.default.createElement(_PanelToggle.default, null, children);\n    }\n\n    return _react.default.createElement(Component, (0, _extends2.default)({}, elementProps, {\n      className: (0, _classnames.default)(className, (0, _bootstrapUtils.prefix)(bsProps, 'title'))\n    }), children);\n  };\n\n  return PanelTitle;\n}(_react.default.Component);\n\nPanelTitle.propTypes = propTypes;\nPanelTitle.defaultProps = defaultProps;\nPanelTitle.contextTypes = contextTypes;\n\nvar _default = (0, _bootstrapUtils.bsClass)('panel', PanelTitle);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}